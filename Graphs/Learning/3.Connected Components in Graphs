Connected Components in Graphs â€“ Revision Notes
1. Definition

A connected component is a maximal set of nodes in a graph such that each node is reachable from any other node in the same set.

Undirected graph: A component is connected if there exists a path between every pair of nodes in that component.

A graph can have multiple connected components.

Example:
Graph with 10 nodes and edges:

(1,2), (1,3), (2,4), (4,3), (5,6), (5,7), (6,7), (8,9)


Connected Components:

{1,2,3,4}

{5,6,7}

{8,9}

{10}

Even if a graph has multiple disconnected parts, we can still call it a single graph with multiple connected components.

2. Graph Traversal for Components

Traversal algorithms: DFS or BFS are used to explore nodes.

Visited array: Keep track of nodes that have been visited.

Example: visited[n+1] initialized to 0.

Why not call traversal(1) only?

Traversal from a single node only explores the connected component containing that node.

Other components remain unvisited.

Solution: Loop through all nodes and call traversal if a node is unvisited:

for(int i=1; i<=n; i++){
    if(!visited[i]){
        traversal(i); // DFS or BFS
    }
}


Each call explores one connected component completely.

By the end, all components of the graph are traversed.
